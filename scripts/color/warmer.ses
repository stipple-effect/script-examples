(~ color c -> color) {
    ~ float YELLOW_HUE = 1 / 6.0;
    ~ float FACTOR = 0.2; ~ float AMBIENT_FACTOR = 1.1;

    float h = c.hue;
    float s = c.sat;
    float v = c.val;

    ~ float shift = FACTOR * diff(YELLOW_HUE, h);
    ~ float shiftVector = shift * (flip(YELLOW_HUE, h) ? -1 : 1);

    h = normalize(h + shiftVector);
    s = min(s * AMBIENT_FACTOR, 1.0);
    v = min(v * AMBIENT_FACTOR, 1.0);

    return $Graphics.hsv(h, s, v, c.a);
}

diff(float ref, float val -> float) {
    if (ref > val)
        return min(ref - val, (val + 1.0) - ref);
    else
        return min(val - ref, (ref + 1.0) - val);
}

flip(float ref, float val -> bool) {
    if (ref > val)
        return ref - val > (val + 1.0) - ref;
    else
        return val - ref < (ref + 1.0) - val;
}

normalize(~ float h -> float) -> h < 0.0 ? h + 1.0 : (h >= 1.0 ? h - 1.0 : h)
